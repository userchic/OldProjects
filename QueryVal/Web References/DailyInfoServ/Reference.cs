//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace QueryValuta.DailyInfoServ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DailyInfoSoap", Namespace="http://web.cbr.ru/")]
    public partial class DailyInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NewsInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback OmodInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback XVolXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback MainInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepoDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepoDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback OstatDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback OstatDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DragMetDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DragMetDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateTimeSeldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDateSeldOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumValutesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumValutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursDynamicXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursOnDateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeldCursOnDateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeldCursOnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCursOnDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DailyInfo() {
            this.Url = global::QueryValuta.Properties.Settings.Default.QueryValuta_DailyInfoServ_DailyInfo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NewsInfoXMLCompletedEventHandler NewsInfoXMLCompleted;
        
        /// <remarks/>
        public event OmodInfoXMLCompletedEventHandler OmodInfoXMLCompleted;
        
        /// <remarks/>
        public event XVolXMLCompletedEventHandler XVolXMLCompleted;
        
        /// <remarks/>
        public event MainInfoXMLCompletedEventHandler MainInfoXMLCompleted;
        
        /// <remarks/>
        public event NewsInfoCompletedEventHandler NewsInfoCompleted;
        
        /// <remarks/>
        public event SwapDynamicXMLCompletedEventHandler SwapDynamicXMLCompleted;
        
        /// <remarks/>
        public event SwapDynamicCompletedEventHandler SwapDynamicCompleted;
        
        /// <remarks/>
        public event DepoDynamicXMLCompletedEventHandler DepoDynamicXMLCompleted;
        
        /// <remarks/>
        public event DepoDynamicCompletedEventHandler DepoDynamicCompleted;
        
        /// <remarks/>
        public event OstatDynamicXMLCompletedEventHandler OstatDynamicXMLCompleted;
        
        /// <remarks/>
        public event OstatDynamicCompletedEventHandler OstatDynamicCompleted;
        
        /// <remarks/>
        public event DragMetDynamicXMLCompletedEventHandler DragMetDynamicXMLCompleted;
        
        /// <remarks/>
        public event DragMetDynamicCompletedEventHandler DragMetDynamicCompleted;
        
        /// <remarks/>
        public event GetLatestDateTimeCompletedEventHandler GetLatestDateTimeCompleted;
        
        /// <remarks/>
        public event GetLatestDateCompletedEventHandler GetLatestDateCompleted;
        
        /// <remarks/>
        public event GetLatestDateTimeSeldCompletedEventHandler GetLatestDateTimeSeldCompleted;
        
        /// <remarks/>
        public event GetLatestDateSeldCompletedEventHandler GetLatestDateSeldCompleted;
        
        /// <remarks/>
        public event EnumValutesXMLCompletedEventHandler EnumValutesXMLCompleted;
        
        /// <remarks/>
        public event EnumValutesCompletedEventHandler EnumValutesCompleted;
        
        /// <remarks/>
        public event GetCursDynamicXMLCompletedEventHandler GetCursDynamicXMLCompleted;
        
        /// <remarks/>
        public event GetCursDynamicCompletedEventHandler GetCursDynamicCompleted;
        
        /// <remarks/>
        public event GetCursOnDateXMLCompletedEventHandler GetCursOnDateXMLCompleted;
        
        /// <remarks/>
        public event GetSeldCursOnDateXMLCompletedEventHandler GetSeldCursOnDateXMLCompleted;
        
        /// <remarks/>
        public event GetSeldCursOnDateCompletedEventHandler GetSeldCursOnDateCompleted;
        
        /// <remarks/>
        public event GetCursOnDateCompletedEventHandler GetCursOnDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/NewsInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewsInfoXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("NewsInfoXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNewsInfoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NewsInfoXML", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndNewsInfoXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.NewsInfoXMLOperationCompleted == null)) {
                this.NewsInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsInfoXMLOperationCompleted);
            }
            this.InvokeAsync("NewsInfoXML", new object[] {
                        fromDate,
                        ToDate}, this.NewsInfoXMLOperationCompleted, userState);
        }
        
        private void OnNewsInfoXMLOperationCompleted(object arg) {
            if ((this.NewsInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsInfoXMLCompleted(this, new NewsInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OmodInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OmodInfoXML() {
            object[] results = this.Invoke("OmodInfoXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOmodInfoXML(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OmodInfoXML", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndOmodInfoXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OmodInfoXMLAsync() {
            this.OmodInfoXMLAsync(null);
        }
        
        /// <remarks/>
        public void OmodInfoXMLAsync(object userState) {
            if ((this.OmodInfoXMLOperationCompleted == null)) {
                this.OmodInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOmodInfoXMLOperationCompleted);
            }
            this.InvokeAsync("OmodInfoXML", new object[0], this.OmodInfoXMLOperationCompleted, userState);
        }
        
        private void OnOmodInfoXMLOperationCompleted(object arg) {
            if ((this.OmodInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OmodInfoXMLCompleted(this, new OmodInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/XVolXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode XVolXML() {
            object[] results = this.Invoke("XVolXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginXVolXML(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("XVolXML", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndXVolXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void XVolXMLAsync() {
            this.XVolXMLAsync(null);
        }
        
        /// <remarks/>
        public void XVolXMLAsync(object userState) {
            if ((this.XVolXMLOperationCompleted == null)) {
                this.XVolXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXVolXMLOperationCompleted);
            }
            this.InvokeAsync("XVolXML", new object[0], this.XVolXMLOperationCompleted, userState);
        }
        
        private void OnXVolXMLOperationCompleted(object arg) {
            if ((this.XVolXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XVolXMLCompleted(this, new XVolXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/MainInfoXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MainInfoXML() {
            object[] results = this.Invoke("MainInfoXML", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMainInfoXML(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MainInfoXML", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndMainInfoXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MainInfoXMLAsync() {
            this.MainInfoXMLAsync(null);
        }
        
        /// <remarks/>
        public void MainInfoXMLAsync(object userState) {
            if ((this.MainInfoXMLOperationCompleted == null)) {
                this.MainInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMainInfoXMLOperationCompleted);
            }
            this.InvokeAsync("MainInfoXML", new object[0], this.MainInfoXMLOperationCompleted, userState);
        }
        
        private void OnMainInfoXMLOperationCompleted(object arg) {
            if ((this.MainInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MainInfoXMLCompleted(this, new MainInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/NewsInfo", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NewsInfo(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("NewsInfo", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNewsInfo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("NewsInfo", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndNewsInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.NewsInfoOperationCompleted == null)) {
                this.NewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsInfoOperationCompleted);
            }
            this.InvokeAsync("NewsInfo", new object[] {
                        fromDate,
                        ToDate}, this.NewsInfoOperationCompleted, userState);
        }
        
        private void OnNewsInfoOperationCompleted(object arg) {
            if ((this.NewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsInfoCompleted(this, new NewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SwapDynamicXML", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndSwapDynamicXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapDynamicXMLOperationCompleted == null)) {
                this.SwapDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("SwapDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.SwapDynamicXMLOperationCompleted, userState);
        }
        
        private void OnSwapDynamicXMLOperationCompleted(object arg) {
            if ((this.SwapDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDynamicXMLCompleted(this, new SwapDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SwapDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SwapDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("SwapDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSwapDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SwapDynamic", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSwapDynamic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.SwapDynamicOperationCompleted == null)) {
                this.SwapDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapDynamicOperationCompleted);
            }
            this.InvokeAsync("SwapDynamic", new object[] {
                        fromDate,
                        ToDate}, this.SwapDynamicOperationCompleted, userState);
        }
        
        private void OnSwapDynamicOperationCompleted(object arg) {
            if ((this.SwapDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapDynamicCompleted(this, new SwapDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DepoDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DepoDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DepoDynamicXML", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndDepoDynamicXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DepoDynamicXMLOperationCompleted == null)) {
                this.DepoDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepoDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("DepoDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.DepoDynamicXMLOperationCompleted, userState);
        }
        
        private void OnDepoDynamicXMLOperationCompleted(object arg) {
            if ((this.DepoDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepoDynamicXMLCompleted(this, new DepoDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DepoDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DepoDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DepoDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDepoDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DepoDynamic", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDepoDynamic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DepoDynamicOperationCompleted == null)) {
                this.DepoDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepoDynamicOperationCompleted);
            }
            this.InvokeAsync("DepoDynamic", new object[] {
                        fromDate,
                        ToDate}, this.DepoDynamicOperationCompleted, userState);
        }
        
        private void OnDepoDynamicOperationCompleted(object arg) {
            if ((this.DepoDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepoDynamicCompleted(this, new DepoDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OstatDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OstatDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OstatDynamicXML", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndOstatDynamicXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OstatDynamicXMLOperationCompleted == null)) {
                this.OstatDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOstatDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("OstatDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.OstatDynamicXMLOperationCompleted, userState);
        }
        
        private void OnOstatDynamicXMLOperationCompleted(object arg) {
            if ((this.OstatDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OstatDynamicXMLCompleted(this, new OstatDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OstatDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OstatDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("OstatDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOstatDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OstatDynamic", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndOstatDynamic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.OstatDynamicOperationCompleted == null)) {
                this.OstatDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOstatDynamicOperationCompleted);
            }
            this.InvokeAsync("OstatDynamic", new object[] {
                        fromDate,
                        ToDate}, this.OstatDynamicOperationCompleted, userState);
        }
        
        private void OnOstatDynamicOperationCompleted(object arg) {
            if ((this.OstatDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OstatDynamicCompleted(this, new OstatDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DragMetDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DragMetDynamicXML", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DragMetDynamicXML", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndDragMetDynamicXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DragMetDynamicXMLOperationCompleted == null)) {
                this.DragMetDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("DragMetDynamicXML", new object[] {
                        fromDate,
                        ToDate}, this.DragMetDynamicXMLOperationCompleted, userState);
        }
        
        private void OnDragMetDynamicXMLOperationCompleted(object arg) {
            if ((this.DragMetDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DragMetDynamicXMLCompleted(this, new DragMetDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/DragMetDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DragMetDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            object[] results = this.Invoke("DragMetDynamic", new object[] {
                        fromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDragMetDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DragMetDynamic", new object[] {
                        fromDate,
                        ToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDragMetDynamic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicAsync(fromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.DragMetDynamicOperationCompleted == null)) {
                this.DragMetDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicOperationCompleted);
            }
            this.InvokeAsync("DragMetDynamic", new object[] {
                        fromDate,
                        ToDate}, this.DragMetDynamicOperationCompleted, userState);
        }
        
        private void OnDragMetDynamicOperationCompleted(object arg) {
            if ((this.DragMetDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DragMetDynamicCompleted(this, new DragMetDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDateTime", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLatestDateTime() {
            object[] results = this.Invoke("GetLatestDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestDateTime(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestDateTime", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetLatestDateTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateTimeAsync() {
            this.GetLatestDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateTimeAsync(object userState) {
            if ((this.GetLatestDateTimeOperationCompleted == null)) {
                this.GetLatestDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetLatestDateTime", new object[0], this.GetLatestDateTimeOperationCompleted, userState);
        }
        
        private void OnGetLatestDateTimeOperationCompleted(object arg) {
            if ((this.GetLatestDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateTimeCompleted(this, new GetLatestDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLatestDate() {
            object[] results = this.Invoke("GetLatestDate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestDate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestDate", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLatestDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateAsync() {
            this.GetLatestDateAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateAsync(object userState) {
            if ((this.GetLatestDateOperationCompleted == null)) {
                this.GetLatestDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateOperationCompleted);
            }
            this.InvokeAsync("GetLatestDate", new object[0], this.GetLatestDateOperationCompleted, userState);
        }
        
        private void OnGetLatestDateOperationCompleted(object arg) {
            if ((this.GetLatestDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateCompleted(this, new GetLatestDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDateTimeSeld", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLatestDateTimeSeld() {
            object[] results = this.Invoke("GetLatestDateTimeSeld", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestDateTimeSeld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestDateTimeSeld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetLatestDateTimeSeld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateTimeSeldAsync() {
            this.GetLatestDateTimeSeldAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateTimeSeldAsync(object userState) {
            if ((this.GetLatestDateTimeSeldOperationCompleted == null)) {
                this.GetLatestDateTimeSeldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeSeldOperationCompleted);
            }
            this.InvokeAsync("GetLatestDateTimeSeld", new object[0], this.GetLatestDateTimeSeldOperationCompleted, userState);
        }
        
        private void OnGetLatestDateTimeSeldOperationCompleted(object arg) {
            if ((this.GetLatestDateTimeSeldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateTimeSeldCompleted(this, new GetLatestDateTimeSeldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetLatestDateSeld", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLatestDateSeld() {
            object[] results = this.Invoke("GetLatestDateSeld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestDateSeld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestDateSeld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLatestDateSeld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDateSeldAsync() {
            this.GetLatestDateSeldAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDateSeldAsync(object userState) {
            if ((this.GetLatestDateSeldOperationCompleted == null)) {
                this.GetLatestDateSeldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDateSeldOperationCompleted);
            }
            this.InvokeAsync("GetLatestDateSeld", new object[0], this.GetLatestDateSeldOperationCompleted, userState);
        }
        
        private void OnGetLatestDateSeldOperationCompleted(object arg) {
            if ((this.GetLatestDateSeldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDateSeldCompleted(this, new GetLatestDateSeldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/EnumValutesXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumValutesXML(bool Seld) {
            object[] results = this.Invoke("EnumValutesXML", new object[] {
                        Seld});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnumValutesXML(bool Seld, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnumValutesXML", new object[] {
                        Seld}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndEnumValutesXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumValutesXMLAsync(bool Seld) {
            this.EnumValutesXMLAsync(Seld, null);
        }
        
        /// <remarks/>
        public void EnumValutesXMLAsync(bool Seld, object userState) {
            if ((this.EnumValutesXMLOperationCompleted == null)) {
                this.EnumValutesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumValutesXMLOperationCompleted);
            }
            this.InvokeAsync("EnumValutesXML", new object[] {
                        Seld}, this.EnumValutesXMLOperationCompleted, userState);
        }
        
        private void OnEnumValutesXMLOperationCompleted(object arg) {
            if ((this.EnumValutesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumValutesXMLCompleted(this, new EnumValutesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/EnumValutes", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EnumValutes(bool Seld) {
            object[] results = this.Invoke("EnumValutes", new object[] {
                        Seld});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnumValutes(bool Seld, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnumValutes", new object[] {
                        Seld}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndEnumValutes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EnumValutesAsync(bool Seld) {
            this.EnumValutesAsync(Seld, null);
        }
        
        /// <remarks/>
        public void EnumValutesAsync(bool Seld, object userState) {
            if ((this.EnumValutesOperationCompleted == null)) {
                this.EnumValutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumValutesOperationCompleted);
            }
            this.InvokeAsync("EnumValutes", new object[] {
                        Seld}, this.EnumValutesOperationCompleted, userState);
        }
        
        private void OnEnumValutesOperationCompleted(object arg) {
            if ((this.EnumValutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumValutesCompleted(this, new EnumValutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursDynamicXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            object[] results = this.Invoke("GetCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetCursDynamicXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicXMLAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        /// <remarks/>
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.GetCursDynamicXMLOperationCompleted == null)) {
                this.GetCursDynamicXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicXMLOperationCompleted);
            }
            this.InvokeAsync("GetCursDynamicXML", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.GetCursDynamicXMLOperationCompleted, userState);
        }
        
        private void OnGetCursDynamicXMLOperationCompleted(object arg) {
            if ((this.GetCursDynamicXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursDynamicXMLCompleted(this, new GetCursDynamicXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursDynamic", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            object[] results = this.Invoke("GetCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCursDynamic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        /// <remarks/>
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.GetCursDynamicOperationCompleted == null)) {
                this.GetCursDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicOperationCompleted);
            }
            this.InvokeAsync("GetCursDynamic", new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.GetCursDynamicOperationCompleted, userState);
        }
        
        private void OnGetCursDynamicOperationCompleted(object arg) {
            if ((this.GetCursDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursDynamicCompleted(this, new GetCursDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursOnDateXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCursOnDateXML(System.DateTime On_date) {
            object[] results = this.Invoke("GetCursOnDateXML", new object[] {
                        On_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCursOnDateXML", new object[] {
                        On_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetCursOnDateXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetCursOnDateXMLAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.GetCursOnDateXMLOperationCompleted == null)) {
                this.GetCursOnDateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateXMLOperationCompleted);
            }
            this.InvokeAsync("GetCursOnDateXML", new object[] {
                        On_date}, this.GetCursOnDateXMLOperationCompleted, userState);
        }
        
        private void OnGetCursOnDateXMLOperationCompleted(object arg) {
            if ((this.GetCursOnDateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursOnDateXMLCompleted(this, new GetCursOnDateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetSeldCursOnDateXML", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSeldCursOnDateXML(System.DateTime On_date) {
            object[] results = this.Invoke("GetSeldCursOnDateXML", new object[] {
                        On_date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeldCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeldCursOnDateXML", new object[] {
                        On_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetSeldCursOnDateXML(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateXMLAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.GetSeldCursOnDateXMLOperationCompleted == null)) {
                this.GetSeldCursOnDateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateXMLOperationCompleted);
            }
            this.InvokeAsync("GetSeldCursOnDateXML", new object[] {
                        On_date}, this.GetSeldCursOnDateXMLOperationCompleted, userState);
        }
        
        private void OnGetSeldCursOnDateXMLOperationCompleted(object arg) {
            if ((this.GetSeldCursOnDateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeldCursOnDateXMLCompleted(this, new GetSeldCursOnDateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetSeldCursOnDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeldCursOnDate(System.DateTime On_date) {
            object[] results = this.Invoke("GetSeldCursOnDate", new object[] {
                        On_date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeldCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeldCursOnDate", new object[] {
                        On_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetSeldCursOnDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetSeldCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.GetSeldCursOnDateOperationCompleted == null)) {
                this.GetSeldCursOnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateOperationCompleted);
            }
            this.InvokeAsync("GetSeldCursOnDate", new object[] {
                        On_date}, this.GetSeldCursOnDateOperationCompleted, userState);
        }
        
        private void OnGetSeldCursOnDateOperationCompleted(object arg) {
            if ((this.GetSeldCursOnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeldCursOnDateCompleted(this, new GetSeldCursOnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetCursOnDate", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCursOnDate(System.DateTime On_date) {
            object[] results = this.Invoke("GetCursOnDate", new object[] {
                        On_date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCursOnDate", new object[] {
                        On_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCursOnDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCursOnDateAsync(System.DateTime On_date) {
            this.GetCursOnDateAsync(On_date, null);
        }
        
        /// <remarks/>
        public void GetCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.GetCursOnDateOperationCompleted == null)) {
                this.GetCursOnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateOperationCompleted);
            }
            this.InvokeAsync("GetCursOnDate", new object[] {
                        On_date}, this.GetCursOnDateOperationCompleted, userState);
        }
        
        private void OnGetCursOnDateOperationCompleted(object arg) {
            if ((this.GetCursOnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCursOnDateCompleted(this, new GetCursOnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NewsInfoXMLCompletedEventHandler(object sender, NewsInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OmodInfoXMLCompletedEventHandler(object sender, OmodInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OmodInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OmodInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void XVolXMLCompletedEventHandler(object sender, XVolXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XVolXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XVolXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MainInfoXMLCompletedEventHandler(object sender, MainInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MainInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MainInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NewsInfoCompletedEventHandler(object sender, NewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapDynamicXMLCompletedEventHandler(object sender, SwapDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwapDynamicCompletedEventHandler(object sender, SwapDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DepoDynamicXMLCompletedEventHandler(object sender, DepoDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepoDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepoDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DepoDynamicCompletedEventHandler(object sender, DepoDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepoDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepoDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OstatDynamicXMLCompletedEventHandler(object sender, OstatDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OstatDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OstatDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OstatDynamicCompletedEventHandler(object sender, OstatDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OstatDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OstatDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DragMetDynamicXMLCompletedEventHandler(object sender, DragMetDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DragMetDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DragMetDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DragMetDynamicCompletedEventHandler(object sender, DragMetDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DragMetDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DragMetDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateTimeCompletedEventHandler(object sender, GetLatestDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateCompletedEventHandler(object sender, GetLatestDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateTimeSeldCompletedEventHandler(object sender, GetLatestDateTimeSeldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateTimeSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateTimeSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestDateSeldCompletedEventHandler(object sender, GetLatestDateSeldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDateSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDateSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumValutesXMLCompletedEventHandler(object sender, EnumValutesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumValutesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumValutesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnumValutesCompletedEventHandler(object sender, EnumValutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumValutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumValutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursDynamicXMLCompletedEventHandler(object sender, GetCursDynamicXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursDynamicCompletedEventHandler(object sender, GetCursDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursOnDateXMLCompletedEventHandler(object sender, GetCursOnDateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSeldCursOnDateXMLCompletedEventHandler(object sender, GetSeldCursOnDateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeldCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeldCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSeldCursOnDateCompletedEventHandler(object sender, GetSeldCursOnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeldCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeldCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCursOnDateCompletedEventHandler(object sender, GetCursOnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591